
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "COLON COMMA COMMENT CTEF CTEI DIGIT DIVIDE ELSE EQ FLOAT GT ID IF INT LB LP LT MINUS NOTEQUAL PLUS PRINT PROGRAM RB RP SC TIMES VARexpression : DIGITexpression : '{' expression '}'expression : INT expression"
    
_lr_action_items = {'DIGIT':([0,3,4,],[2,2,2,]),'{':([0,3,4,],[3,3,3,]),'INT':([0,3,4,],[4,4,4,]),'$end':([1,2,6,7,],[0,-1,-3,-2,]),'}':([2,5,6,7,],[-1,7,-3,-2,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,3,4,],[1,5,6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> DIGIT','expression',1,'p_expression_digit','main.py',123),
  ('expression -> { expression }','expression',3,'p_expression_bloque','main.py',131),
  ('expression -> INT expression','expression',2,'p_expression_tipo','main.py',135),
]
